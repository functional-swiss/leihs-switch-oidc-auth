Include /etc/apache2/oidc_vars.conf

LogLevel auth_openidc:debug
LoadModule auth_openidc_module /usr/lib/apache2/modules/mod_auth_openidc.so

OIDCXForwardedHeaders X-Forwarded-Host X-Forwarded-Port X-Forwarded-Proto

# The redirect URI, you specified in the resource registry
OIDCRedirectURI /authenticators/switch-open-id/functional/sign-in
OIDCDefaultURL http://localhost:3200/authenticators/switch-open-id/functional/

# Set a password for crypto purposes, this is used for:
# - encryption of the (temporary) state cookie
# - encryption of cache entries, that may include the session cookie, see: OIDCCacheEncrypt and OIDCSessionType
OIDCCryptoPassphrase #{OIDC_CRYPTO_PASSPHRASE}

# Where the OIDC Metadata can be fetched. Either
# https://login.test.eduid.ch/.well-known/openid-configuration (TEST)
# or
# https://login.eduid.ch/.well-known/openid-configuration (PROD)
OIDCProviderMetadataURL ${OIDC_METADATA_URL}

OIDCInfoHook iat access_token access_token_expires id_token userinfo refresh_token session

OIDCProviderTokenEndpointAuth client_secret_basic

# Only the authorization code flow is supported
OIDCResponseType "code"

# The client ID you specified in the resource registry
OIDCClientID ${OIDC_CLIENT_ID}
OIDCClientSecret ${OIDC_CLIENT_SECRET}

# The scopes you need
OIDCScope "openid email profile offline_access swissEduIDBase"

# OIDCCacheType redis
# OIDCRedisCacheServer host.docker.internal

OIDCOAuthSSLValidateServer Off

# OIDC location. All pages https://example.com/protected/* will require a valid ID token.
<Location /authenticators/switch-open-id/${LEIHS_AUTHENTICATOR_ID}>
  AuthType openid-connect
  Require valid-user
</Location>


# vim: syntax=apache
